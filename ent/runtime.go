// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/quavious/golang-docker-forum/ent/comment"
	"github.com/quavious/golang-docker-forum/ent/post"
	"github.com/quavious/golang-docker-forum/ent/product"
	"github.com/quavious/golang-docker-forum/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescUsername is the schema descriptor for username field.
	commentDescUsername := commentFields[0].Descriptor()
	// comment.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	comment.UsernameValidator = commentDescUsername.Validators[0].(func(string) error)
	// commentDescUserIP is the schema descriptor for user_ip field.
	commentDescUserIP := commentFields[1].Descriptor()
	// comment.UserIPValidator is a validator for the "user_ip" field. It is called by the builders before save.
	comment.UserIPValidator = commentDescUserIP.Validators[0].(func(string) error)
	// commentDescPassword is the schema descriptor for password field.
	commentDescPassword := commentFields[2].Descriptor()
	// comment.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	comment.PasswordValidator = commentDescPassword.Validators[0].(func(string) error)
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[3].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[4].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescTitle is the schema descriptor for title field.
	postDescTitle := postFields[0].Descriptor()
	// post.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	post.TitleValidator = postDescTitle.Validators[0].(func(string) error)
	// postDescContent is the schema descriptor for content field.
	postDescContent := postFields[1].Descriptor()
	// post.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	post.ContentValidator = postDescContent.Validators[0].(func(string) error)
	// postDescUsername is the schema descriptor for username field.
	postDescUsername := postFields[2].Descriptor()
	// post.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	post.UsernameValidator = postDescUsername.Validators[0].(func(string) error)
	// postDescUserIP is the schema descriptor for user_ip field.
	postDescUserIP := postFields[3].Descriptor()
	// post.UserIPValidator is a validator for the "user_ip" field. It is called by the builders before save.
	post.UserIPValidator = postDescUserIP.Validators[0].(func(string) error)
	// postDescPassword is the schema descriptor for password field.
	postDescPassword := postFields[4].Descriptor()
	// post.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	post.PasswordValidator = postDescPassword.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[5].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[6].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[1].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescLinkURL is the schema descriptor for link_url field.
	productDescLinkURL := productFields[5].Descriptor()
	// product.LinkURLValidator is a validator for the "link_url" field. It is called by the builders before save.
	product.LinkURLValidator = productDescLinkURL.Validators[0].(func(string) error)
	// productDescImageURL is the schema descriptor for image_url field.
	productDescImageURL := productFields[6].Descriptor()
	// product.ImageURLValidator is a validator for the "image_url" field. It is called by the builders before save.
	product.ImageURLValidator = productDescImageURL.Validators[0].(func(string) error)
	// productDescCompany is the schema descriptor for company field.
	productDescCompany := productFields[7].Descriptor()
	// product.CompanyValidator is a validator for the "company" field. It is called by the builders before save.
	product.CompanyValidator = productDescCompany.Validators[0].(func(string) error)
	// productDescID is the schema descriptor for id field.
	productDescID := productFields[0].Descriptor()
	// product.IDValidator is a validator for the "id" field. It is called by the builders before save.
	product.IDValidator = productDescID.Validators[0].(func(string) error)
}
